buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.0'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
    }
}

allprojects {
    repositories {
        mavenCentral()
        mavenLM()
    }
}


apply plugin: 'com.android.application'
apply plugin: 'com.leroymerlin.delivery'



buildscript {
    repositories {
        mavenLocal()
        jcenter()
        mavenLM()
    }
    dependencies {
        Properties props = new Properties()
        props.load(new FileInputStream(project.file("../gradle.properties")))
        def versionPlugin = props.getProperty('version')


        classpath 'com.android.tools.build:gradle:1.5.0'
        classpath "com.leroymerlin.plugins:delivery-plugin:${versionPlugin}"
    }
}


android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.leroymerlin.pandroid.plugin.testapp"
        minSdkVersion 19
        targetSdkVersion 23
    }
    buildTypes {
        all {
            minifyEnabled false
        }
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.2.1'
}

delivery {
    ext {
        developBranch = 'develop'
        masterBranch = 'master'
        releaseBranch = "release/$version"
    }

    flows {
        customStartFlow {
            commitFiles 'this is a comment'
            push ''
        }
        beginReleaseFlow {
            branch delivery.ext.releaseBranch
            //changeVersion (System.getProperty("VERSION")? version)-"-SNAPSHOT" versionId+1
            commitFiles 'this is a comment'
            tag 'toto'
            push ''
        }
        endReleaseFlow {
            branch delivery.ext.releaseBranch
        }
    }

    /*signingProperties {
        all {
            propertiesFile = project.file("signing.properties")
        }
    }*/
}

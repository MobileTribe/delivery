buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.0'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
    }
}

allprojects {
    repositories {
        mavenCentral()
        mavenLM()
    }
}


apply plugin: 'com.android.application'
apply plugin: 'com.leroymerlin.delivery'



buildscript {
    repositories {
        mavenLocal()
        jcenter()
        mavenLM()
    }
    dependencies {
        Properties props = new Properties()
        props.load(new FileInputStream(project.file("../gradle.properties")))
        def versionPlugin = props.getProperty('version')


        classpath 'com.android.tools.build:gradle:1.5.0'
        classpath "com.leroymerlin.plugins:delivery-plugin:${versionPlugin}"
    }
}


android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.leroymerlin.pandroid.plugin.testapp"
        minSdkVersion 19
        targetSdkVersion 23
    }
    buildTypes {
        all {
            minifyEnabled false
        }
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.2.1'
}

delivery {
    /*beginFlow totoFlow
    endFlow (--)? endRelease : totoFlow*/
    handler = com.leroymerlin.plugins.core.GitHandler
    branchName = 'Toto'

    flows {
        "scmFlow" {
            step {
                name = 'init'
                branch = 'test'
                desc = 'this is a description for init'
                task = com.leroymerlin.plugins.tasks.InitTask
            }

            step {
                name = 'create'
                branch = 'test'
                depends = 'init'
                desc = 'this is a description for create'
                task = com.leroymerlin.plugins.tasks.CreateTask
            }
            step {
                name = 'add'
                branch = 'test'
                depends = 'create'
                desc = 'this is a description for add'
                task = com.leroymerlin.plugins.tasks.AddFilesTask
            }
            step {
                name = 'commit'
                branch = 'test'
                depends = 'add'
                desc = 'this is a description for commit'
                task = com.leroymerlin.plugins.tasks.CommitTask
            }
        }
    }

    archiveRepositories = {

    }

    /*signingProperties {
        all {
            propertiesFile = project.file("signing.properties")
        }
    }*/
}
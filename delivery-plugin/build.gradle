apply plugin: 'groovy'
apply plugin: 'com.leroymerlin.delivery'

delivery {
    archiveRepositories = project.ext.properties.containsKey('bintrayRepositories') ? project.ext.bintrayRepositories : {
    }

    flows {
        documentation {
            step 'documentation', 'Generate documentation'
            task 'createDoc', true
            add 'delivery-doc/html/.'
        }
    }
}

repositories {
    jcenter()
    maven { url('http://repository.openbakery.org/') }
    mavenCentral()
}

configurations {
    // configuration that holds jars to include in the jar
    extraLibs
}

jar {
    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

dependencies {
    implementation gradleApi()
    implementation localGroovy()

    implementation("commons-io:commons-io:2.5")
    implementation("commons-collections:commons-collections:3.2.2")
    implementation("commons-configuration:commons-configuration:1.10")
    implementation("com.google.guava:guava:18.0")

    extraLibs("org.openbakery:xcode-plugin:0.15.+") {
        exclude group: 'commons-io', module: 'commons-io'
        exclude group: 'commons-collections', module: 'commons-collections'
        exclude group: 'commons-configuration', module: 'commons-configuration'
        exclude group: 'com.google.guava', module: 'guava'
    }
    testImplementation 'junit:junit:4.12'
    testImplementation 'com.android.tools.build:gradle:2.3.3'
}

test {
    testLogging {
        events "standardOut", "standardError"
    }
}

task('createDoc', dependsOn: project(':delivery-doc').getTasksByName('asciidoctor', false))

project.afterEvaluate({
    def docFlow = tasks.findByPath('documentationFlow')
    tasks.findByPath('releaseGitStepCommitVersionFiles').dependsOn += docFlow
    docFlow.mustRunAfter tasks.findByPath('releaseGitStepGenerateVersionFiles')
})
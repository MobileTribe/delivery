buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.0'
    }
}

allprojects {
    repositories {
        mavenCentral()
        mavenLM()
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.leroymerlin.delivery'

buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.0'
        classpath "com.leroymerlin.plugins:delivery-plugin:${System.getProperty("DELIVERY_VERSION")}"
    }
}


android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "com.leroymerlin.pandroid.plugin.testapp"
        minSdkVersion 19
        targetSdkVersion 25
    }
    buildTypes {
        all {
            minifyEnabled false
        }
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.2.1'
}

/*delivery {
    ext {
        developBranch = 'developTest'
        masterBranch = 'master'
        releaseBranch = "release/$version"
        customBranch = 'custom'
        versionId = (versionId as int) + 1
    }

    flows {
        releaseFlow {
            switchBranch delivery.releaseBranch, true
            commitFiles 'test release'
            push
        }

    }

    signingProperties {
        all {
            propertiesFile = project.file("signing.properties")
        }
    }
}*/


if (file('extra.gradle').exists()) {
    apply from: 'extra.gradle'
}